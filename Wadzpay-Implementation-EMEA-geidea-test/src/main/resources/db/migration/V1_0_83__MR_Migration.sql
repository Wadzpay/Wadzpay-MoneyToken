CREATE TABLE IF NOT EXISTS public.transaction_refund_details
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, --P.K --nextval('transaction_refund_details_id_seq'::regclass),
    transaction_id BIGINT NOT NULL, --F.K. from TRANSACTION table
    type VARCHAR(255),
    uuid VARCHAR(255),
    number_of_refunds integer,
    refund_origin VARCHAR(255),
    refund_mode VARCHAR(255),
    refund_user_name VARCHAR(255) ,
    refund_user_mobile VARCHAR(255) ,
    refund_user_email VARCHAR(255) ,
    refund_fiat_type VARCHAR(255) ,
    refund_wallet_address VARCHAR(255) ,
    refund_date_time timestamp,
    refund_status VARCHAR(255) DEFAULT NULL,
    refund_initiate_date timestamp,
    refund_settlement_date timestamp,
    refund_initiated_from BIGINT,
    refund_amount_digital numeric(40,20) DEFAULT 0.0,
    refund_amount_fiat numeric(40,20) DEFAULT 0.0,
    refund_token_id bigint references refund_token(id),
    refund_digital_currency_type VARCHAR(255),
    refund_reason VARCHAR(255),
    refund_acceptance_comment VARCHAR(255),
    refund_approval_comment VARCHAR(255),
    refund_type VARCHAR(255),
    refund_blockchain_hash VARCHAR(255),
    wallet_address_match Boolean,
    ext_pos_id_refund VARCHAR(255) ,
    ext_pos_transaction_id_refund VARCHAR(255) ,
    ext_pos_logical_date_refund TIMESTAMP,
    ext_pos_shift_refund VARCHAR(255) ,
    ext_pos_actual_date_refund DATE,
    ext_pos_sequence_no_refund VARCHAR(255) ,
    ext_pos_actual_time_refund TIME,
    created_at timestamp default(now()),
    last_updated_on timestamp,
    CONSTRAINT transaction_refund_details_pkey PRIMARY KEY (id)
    );

alter table public.transaction_refund_details owner to postgres;

create table public.transaction_mr_bckup as select * from public.transaction;

UPDATE wadzpay_refund_transactions_finance fin
SET    transaction_id = (SELECT
                             t2.id
                         FROM   TRANSACTION t1,
                                TRANSACTION t2
                         WHERE  t1.id = t2.refund_transaction_id
                           AND t1.id = fin.transaction_id);

insert into transaction_refund_details (
    id,
    transaction_id,
    type,
    number_of_refunds,
    refund_mode,
    refund_user_name,
    refund_user_mobile,
    refund_user_email,
    refund_fiat_type,
    refund_wallet_address,
    refund_date_time,
    refund_status,
    refund_initiate_date,
    refund_settlement_date,
    refund_initiated_from,
    refund_amount_digital,
    refund_amount_fiat,
    refund_token_id,
    refund_digital_currency_type,
    refund_reason,
    refund_acceptance_comment,
    refund_approval_comment,
    ext_pos_id_refund,
    ext_pos_transaction_id_refund,
    ext_pos_logical_date_refund,
    ext_pos_shift_refund,
    ext_pos_actual_date_refund,
    ext_pos_sequence_no_refund,
    ext_pos_actual_time_refund
)
select
    tr.id,
    tr.id,
    'REFUND',
    1,
    tr.refund_type,
    tr.refund_user_name,
    tr.refund_user_mobile,
    tr.refund_user_email,
    tr.refund_fiat_type,
    tr.refund_wallet_address,
    tr.refund_date_time,
    tr.refund_status,
    tr.refund_initiate_date,
    tr.refund_settlement_date,
    tr.refund_initiated_from::BIGINT,
    tr.refund_amount_digital,
    tr.refund_amount_fiat,
    tr.refund_token_id,
    tr.refund_digital_currency_type,
    tr.refund_reason,
    tr.refund_acceptance_comment,
    tr.refund_approval_comment,
    tr.ext_pos_id_refund,
    tr.ext_pos_transaction_id_refund,
    tr.ext_pos_logical_date_refund,
    tr.ext_pos_shift_refund,
    tr.ext_pos_actual_date_refund,
    tr.ext_pos_sequence_no_refund,
    tr.ext_pos_actual_time_refund
from
    transaction tr
where
    tr.refund_status != 'NULL';

SELECT setval(pg_get_serial_sequence('transaction_refund_details', 'id'), coalesce(max(id), 0)+1 , false) FROM transaction_refund_details;

alter table public.transaction add column total_refunded_amount_fiat numeric(40, 20) default 0.0;
alter table public.transaction add column last_updated_on timestamp;

update
    transaction tr
set
    total_refunded_amount_fiat = trd.refund_amount_fiat
    from
  transaction_refund_details trd
where
    tr.id = trd.transaction_id
  and trd.refund_status = 'REFUNDED';

alter table public.transaction_refund_details add CONSTRAINT transaction_id_fkey FOREIGN KEY (transaction_id) REFERENCES public.transaction (id);

alter table public.refund_token drop constraint refund_token_refund_transaction_id_fkey;

alter table public.refund_token add column count int;
alter table public.refund_token add column is_expired boolean;

update public.refund_token set is_expired = true, count = 1 where valid_for <= now();


alter table public.wadzpay_refund_transactions_finance drop constraint fkaslhlskjfpekodf;
alter table public.wadzpay_refund_transactions_finance add constraint transaction_refund_details_fk FOREIGN KEY(transaction_id) REFERENCES transaction_refund_details(id);

alter table public.transaction drop column refund_user_name;
alter table public.transaction drop column refund_user_mobile;
alter table public.transaction drop column refund_fiat_type;
alter table public.transaction drop column refund_wallet_address;
alter table public.transaction drop column refund_date_time;
alter table public.transaction drop column refund_status;
alter table public.transaction drop column refund_initiate_date;
alter table public.transaction drop column refund_settlement_date;
alter table public.transaction drop column refund_initiated_from;
alter table public.transaction drop column refund_amount_digital;
alter table public.transaction drop column refund_amount_fiat;
alter table public.transaction drop column refund_token_id;
alter table public.transaction drop column refund_transaction_id;
alter table public.transaction drop column refund_digital_currency_type;
alter table public.transaction drop column refund_reason;
alter table public.transaction drop column refund_acceptance_comment;
alter table public.transaction drop column refund_approval_comment;
alter table public.transaction drop column refund_type;
alter table public.transaction drop column refund_user_email;
alter table public.transaction drop column pos_logical_date;
alter table public.transaction drop column pos_shift;
alter table public.transaction drop column pos_date;
alter table public.transaction drop column pos_time;
alter table public.transaction drop column ext_pos_id_refund;
alter table public.transaction drop column ext_pos_transaction_id_refund;
alter table public.transaction drop column ext_pos_logical_date_refund;
alter table public.transaction drop column ext_pos_shift_refund;
alter table public.transaction drop column ext_pos_actual_date_refund;
alter table public.transaction drop column ext_pos_sequence_no_refund;
alter table public.transaction drop column ext_pos_actual_time_refund;

CREATE TABLE IF NOT EXISTS merchant_config
(
    id                         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    merchant_id                BIGINT CONSTRAINT fk_merchant REFERENCES
    merchant,
    auto_refund_approve_seconds        BIGINT,
    resend_expired_weblink_seconds     BIGINT,
    resend_expired_weblink_limit_count INT,
    auto_refund_approval_required     BOOLEAN,
    auto_send_weblink_required      BOOLEAN,
    description                TEXT,
    created_at                 TIMESTAMP,
    created_by                 VARCHAR(255)
);

alter table public.merchant_config owner to postgres;
