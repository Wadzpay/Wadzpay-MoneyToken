CREATE TABLE IF NOT EXISTS public.outlet
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    aggregator_preference_id character varying(255) COLLATE pg_catalog."default",
    insitution_preference_id character varying(255) COLLATE pg_catalog."default",
    merchant_group_preference_id character varying(255) COLLATE pg_catalog."default",
    merchant_acquirer_preference_id character varying(255) COLLATE pg_catalog."default",
    sub_merchant_preference_id character varying(255) COLLATE pg_catalog."default",
    outlet_id character varying(255) COLLATE pg_catalog."default",
    outlet_name character varying(255) COLLATE pg_catalog."default",
    outlet_status character varying(255) COLLATE pg_catalog."default",
    outlet_logo character varying(1500) COLLATE pg_catalog."default",
    bank_details_id bigint,
    address_id bigint,
    contact_details_id bigint,
    admin_details_id bigint,
    others_id bigint,
    info_id bigint,
    CONSTRAINT outlet_pkey PRIMARY KEY (id),
    CONSTRAINT unique_columns_outlet UNIQUE (aggregator_preference_id, insitution_preference_id, merchant_group_preference_id, merchant_acquirer_preference_id, sub_merchant_preference_id, outlet_id),
    CONSTRAINT fk_oulet_sub_merchant_aquirer_pref_id FOREIGN KEY (aggregator_preference_id, insitution_preference_id, merchant_group_preference_id, merchant_acquirer_preference_id, sub_merchant_preference_id)
    REFERENCES public.sub_merchant_acquirer (aggregator_preference_id, insitution_preference_id, merchant_group_preference_id, merchant_acquirer_preference_id, sub_merchant_acquirer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE
    )

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.outlet
    OWNER to postgres;
-- Index: unique_column_outlet_id

-- DROP INDEX IF EXISTS public.unique_column_outlet_id;

CREATE UNIQUE INDEX IF NOT EXISTS unique_column_outlet_id
    ON public.outlet USING btree
    (outlet_id COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: unique_column_outlet_name

-- DROP INDEX IF EXISTS public.unique_column_outlet_name;

CREATE UNIQUE INDEX IF NOT EXISTS unique_column_outlet_name
    ON public.outlet USING btree
    (outlet_name COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: unique_columns_outlet_id_outlet_name

-- DROP INDEX IF EXISTS public.unique_columns_outlet_id_outlet_name;

CREATE UNIQUE INDEX IF NOT EXISTS unique_columns_outlet_id_outlet_name
    ON public.outlet USING btree
    (outlet_id COLLATE pg_catalog."default" ASC NULLS LAST, outlet_name COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Table: public.pos

-- DROP TABLE IF EXISTS public.pos;

CREATE TABLE IF NOT EXISTS public.pos
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    outlet_preference_id character varying(255) COLLATE pg_catalog."default",
    pos_id character varying(255) COLLATE pg_catalog."default",
    pos_model character varying(255) COLLATE pg_catalog."default",
    pos_manufacturer character varying(255) COLLATE pg_catalog."default",
    pos_serial_num bigint,
    pos_mac_address character varying(255) COLLATE pg_catalog."default",
    posipaddress character varying(255) COLLATE pg_catalog."default",
    pos_firmware_version character varying(255) COLLATE pg_catalog."default",
    outlet_id bigint,
    status character varying(10) COLLATE pg_catalog."default",
    CONSTRAINT pos_pkey PRIMARY KEY (id),
    CONSTRAINT unique_ip UNIQUE (posipaddress),
    CONSTRAINT unique_mac UNIQUE (pos_mac_address),
    CONSTRAINT unique_serail UNIQUE (pos_serial_num),
    CONSTRAINT fk_pos_outlet FOREIGN KEY (outlet_id)
    REFERENCES public.outlet (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    )

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.pos
    OWNER to postgres;
-- Index: unique_column_pos_id

-- DROP INDEX IF EXISTS public.unique_column_pos_id;

CREATE UNIQUE INDEX IF NOT EXISTS unique_column_pos_id
    ON public.pos USING btree
    (pos_id COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;
