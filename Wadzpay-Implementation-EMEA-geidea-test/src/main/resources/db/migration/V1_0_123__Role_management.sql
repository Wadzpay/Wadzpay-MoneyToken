create table if not exists role_management_permissions
(
    permission_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    permission_name VARCHAR(255),
    permission_type VARCHAR(255),
    option_1 VARCHAR(255),
    option_2 VARCHAR(255),
    created_at timestamp default(now()),
    last_updated_on timestamp,
    constraint role_management_permissions_pkey primary key(permission_id)
);

create table if not exists role_management_role
(
    role_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    role_name VARCHAR(255),
    role_type VARCHAR(255),
    option_1 VARCHAR(255),
    option_2 VARCHAR(255),
    created_at timestamp default(now()),
    last_updated_on timestamp,
    constraint role_management_role_pkey primary key(role_id)
);

create table if not exists role_management_user
(
    role_user_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    role_user_type VARCHAR(255),
    role_user_name VARCHAR(255),
    role_user_email VARCHAR(255),
    role_user_mobile_number VARCHAR(255),
    role_user_designation VARCHAR(255),
    role_user_department VARCHAR(255),
    role_user_status VARCHAR(255),
    role_user_assigned_role_from VARCHAR(255),
    role_user_select_role_from VARCHAR(255),
    role_user_comment VARCHAR(255),
    role_user_permission_id BIGINT,
    role_user_role_id BIGINT,
    option_1 VARCHAR(255),
    option_2 VARCHAR(255),
    created_at timestamp default(now()),
    last_updated_on timestamp,
    constraint role_management_user_pkey primary key(role_user_id),
    constraint fk_role_user_permission_id foreign key(role_user_permission_id) references role_management_permissions(permission_id),
    constraint fk_role_user_role_id foreign key(role_user_role_id) references role_management_role(role_id)
);

create table if not exists role_management_screens
(
    role_screen_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    role_screen_type VARCHAR(255),
    role_screen_name VARCHAR(255),
    role_screen_dashboard VARCHAR(255),
    role_screen_transactions VARCHAR(255),
    role_screen_refund VARCHAR(255),
    role_screen_settings VARCHAR(255),
    role_screen_admin VARCHAR(255),
    role_screen_aggregator VARCHAR(255),
    role_screen_institution VARCHAR(255),
    role_screen_permission_id BIGINT,
    role_screen_role_id BIGINT,
    option_1 VARCHAR(255),
    option_2 VARCHAR(255),
    created_at timestamp default(now()),
    last_updated_on timestamp,
    constraint role_management_screens_pkey primary key(role_screen_id),
    constraint fk_role_screen_permission_id foreign key(role_screen_permission_id) references role_management_permissions(permission_id),
    constraint fk_role_screen_role_id foreign key(role_screen_role_id) references role_management_role(role_id)
);
