drop table merchant_group CASCADE;

create table if not exists merchant_group
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    aggregator_preference_id VARCHAR(255),
    insitution_preference_id  VARCHAR(255),
    merchant_group_preference_id VARCHAR(255),
    merchant_group_name VARCHAR(255),
    merchant_group_status VARCHAR(255),
    address_id BIGINT,
    admin_details_id BIGINT,
    bank_details_id BIGINT,
    contact_details_id BIGINT,
    info_id BIGINT,
    others_id BIGINT,
    constraint merchant_group_pkey primary key (id),
    constraint fk_merchant_group_instition_pref_id foreign key(aggregator_preference_id,insitution_preference_id) references institution(aggregator_preference_id, institution_id)
);

ALTER TABLE merchant_group
    ADD CONSTRAINT unique_columns_merchant_group UNIQUE (aggregator_preference_id, insitution_preference_id,merchant_group_preference_id);


drop table merchant_acquirer CASCADE;
create table if not exists merchant_acquirer
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    merchant_acquirer_id VARCHAR(255),
    aggregator_preference_id  VARCHAR(255),
    insitution_preference_id  VARCHAR(255),
    merchant_group_preference_id VARCHAR(255),
    merchant_acquirer_name VARCHAR(255),
    merchant_acquirer_status VARCHAR(255),
    address_id BIGINT,
    admin_details_id BIGINT,
    bank_details_id BIGINT,
    contact_details_id BIGINT,
    info_id BIGINT,
    others_id BIGINT,
    constraint merchant_acquirer_pkey primary key (id),
    constraint fk_merchant_aquirer_mrchnt_grp_pref_id foreign key(aggregator_preference_id,insitution_preference_id,merchant_group_preference_id) references merchant_group(aggregator_preference_id, insitution_preference_id,merchant_group_preference_id)
    );


ALTER TABLE merchant_acquirer
    ADD CONSTRAINT unique_columns_merchant_acquirer UNIQUE (aggregator_preference_id,insitution_preference_id,merchant_group_preference_id,merchant_acquirer_id);

