create table if not exists entity_bank_details
(
    entity_bank_details_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    entity_bank_details_bank_name VARCHAR(255),
    entity_bank_details_bank_account_number VARCHAR(255),
    entity_bank_details_bank_holder_name VARCHAR(255),
    entity_bank_details_branch_code VARCHAR(255),
    entity_bank_details_branch_location VARCHAR(255),
    constraint entity_bank_details_pkey primary key (entity_bank_details_id)
);

create table if not exists entity_address
(
    entity_address_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    entity_address_address_line1 VARCHAR(255),
    entity_address_address_line2 VARCHAR(255),
    entity_address_address_line3 VARCHAR(255),
    entity_address_city VARCHAR(255),
    entity_address_state VARCHAR(255),
    entity_address_country VARCHAR(255),
    entity_address_postal_code VARCHAR(255),
    constraint entity_address_pkey primary key (entity_address_id)
);

create table if not exists entity_contact_details
(
    entity_contact_details_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    entity_contact_details_first_name VARCHAR(255),
    entity_contact_details_middle_name VARCHAR(255),
    entity_contact_details_last_name VARCHAR(255),
    entity_contact_details_email_id VARCHAR(255),
    entity_contact_details_mobile_number VARCHAR(255),
    entity_contact_details_designation VARCHAR(255),
    entity_contact_details_department VARCHAR(255),
    constraint entity_contact_details_pkey primary key (entity_contact_details_id)
);

create table if not exists entity_admin_details
(
    entity_admin_details_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    entity_admin_details_first_name VARCHAR(255),
    entity_admin_details_middle_name VARCHAR(255),
    entity_admin_details_last_name VARCHAR(255),
    entity_admin_details_email_id VARCHAR(255),
    entity_admin_details_mobile_number VARCHAR(255),
    entity_admin_details_department VARCHAR(255),
    constraint entity_admin_details_pkey primary key (entity_admin_details_id)
);

create table if not exists entity_others
(
    entity_others_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    entity_others_customer_offline_txn VARCHAR(255),
    entity_others_merchant_offline_txn VARCHAR(255),
    entity_others_approval_work_flow VARCHAR(255),
    entity_others_activation_date VARCHAR(255),
    constraint entity_others_pkey primary key(entity_others_id)
);

create table if not exists entity_info
(
    entity_info_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    entity_info_entity_id BIGINT,
    entity_info_abbrevation VARCHAR(255),
    entity_info_description VARCHAR(255),
    entity_info_logo VARCHAR(255),
    entity_info_region VARCHAR(255),
    entity_info_timezone VARCHAR(255),
    entity_info_default_digital_currency VARCHAR(255),
    entity_info_base_fiat_currency VARCHAR(255),
    constraint entity_info_pkey primary key (entity_info_id)
);

create table if not exists aggregator
(
    aggregator_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    aggregator_preference_id VARCHAR(255) constraint uk_aggregator_preference_id unique,
    aggregator_name VARCHAR(255),
    aggregator_status VARCHAR(255),
    aggregator_entity_bank_details_id BIGINT,
    aggregator_entity_address_id BIGINT,
    aggregator_entity_contact_details_id BIGINT,
    aggregator_entity_admin_details_id BIGINT,
    aggregator_entity_others_id BIGINT,
    aggregator_entity_info_id BIGINT,
    constraint aggregator_pkey primary key (aggregator_id),
    constraint fk_aggregator_entity_bank_details foreign key(aggregator_entity_bank_details_id) references entity_bank_details(entity_bank_details_id),
    constraint fk_aggregator_entity_address foreign key(aggregator_entity_address_id) references entity_address(entity_address_id),
    constraint fk_aggregator_entity_contact_details foreign key(aggregator_entity_contact_details_id) references entity_contact_details(entity_contact_details_id),
    constraint fk_aggregator_entity_admin_details foreign key(aggregator_entity_admin_details_id) references entity_admin_details(entity_admin_details_id),
    constraint fk_aggregator_entity_others foreign key(aggregator_entity_others_id) references entity_others(entity_others_id),
    constraint fk_aggregator_entity_info foreign key(aggregator_entity_info_id) references entity_info(entity_info_id)
);

create table if not exists institution
(
    institution_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    institution_name VARCHAR(255),
    institution_status VARCHAR(255)
);

create table if not exists merchant_group
(
    merchant_group_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    merchant_group_preference_id VARCHAR(255) constraint uk_merchant_group_preference_id unique,
    merchant_group_institution_id BIGINT,
    merchant_group_name VARCHAR(255),
    merchant_group_status VARCHAR(255),
    merchant_group_entity_bank_details_id BIGINT,
    merchant_group_entity_address_id BIGINT,
    merchant_group_entity_contact_details_id BIGINT,
    merchant_group_entity_admin_details_id BIGINT,
    merchant_group_entity_others_id BIGINT,
    merchant_group_entity_info_id BIGINT,
    constraint merchant_group_pkey primary key(merchant_group_id)
);

create table if not exists merchant_acquirer
(
    merchant_acquirer_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    merchant_acquirer_preference_id VARCHAR(255) constraint uk_merchant_acquirer_preference_id unique,
    merchant_acquirer_merchant_group_id BIGINT,
    merchant_acquirer_name VARCHAR(255),
    merchant_acquirer_status VARCHAR(255),
    merchant_acquirer_entity_bank_details_id BIGINT,
    merchant_acquirer_entity_address_id BIGINT,
    merchant_acquirer_entity_contact_details_id BIGINT,
    merchant_acquirer_entity_admin_details_id BIGINT,
    merchant_acquirer_entity_others_id BIGINT,
    merchant_acquirer_entity_info_id BIGINT,
    constraint merchant_acquirer_pkey primary key (merchant_acquirer_id)
);

create table if not exists sub_merchant_acquirer
(
    sub_merchant_acquirer_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    sub_merchant_acquirer_preference_id VARCHAR(255) constraint uk_sub_merchant_acquirer_preference_id unique,
    sub_merchant_acquirer_merchant_id BIGINT,
    sub_merchant_acquirer_name VARCHAR(255),
    sub_merchant_acquirer_status VARCHAR(255),
    sub_merchant_acquirer_entity_bank_details_id BIGINT,
    sub_merchant_acquirer_entity_address_id BIGINT,
    sub_merchant_acquirer_entity_contact_details_id BIGINT,
    sub_merchant_acquirer_entity_admin_details_id BIGINT,
    sub_merchant_acquirer_entity_others_id BIGINT,
    sub_merchant_acquirer_entity_info_id BIGINT
);

create table if not exists outlet
(
    outlet_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    outlet_preference_id VARCHAR(255) constraint uk_outlet_preference_id unique,
    outlet_sub_merchant_id BIGINT,
    outlet_name VARCHAR(255),
    outlet_status VARCHAR(255),
    outlet_entity_bank_details_id BIGINT,
    outlet_entity_address_id BIGINT,
    outlet_entity_contact_details_id BIGINT,
    outlet_entity_admin_details_id BIGINT,
    outlet_entity_others_id BIGINT,
    outlet_entity_info_id BIGINT,
    constraint outlet_pkey primary key(outlet_id)
);

create table if not exists pos_details
(
    pos_details_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    pos_details_preference_id  VARCHAR(255) constraint uk_pos_details_preference_id unique,
    pos_details_outlet_id BIGINT,
    pos_details_device_id VARCHAR(255),
    pos_details_device_model VARCHAR(255),
    pos_details_device_manufacture VARCHAR(255),
    pos_details_serial_number VARCHAR(255),
    pos_details_mac_address VARCHAR(255),
    pos_details_ip_address VARCHAR(255),
    pos_details_firmware_vision VARCHAR(255),
    constraint pos_details_pkey primary key(pos_details_id),
    constraint fk_pos_details foreign key(pos_details_outlet_id) references outlet(outlet_id)
);
